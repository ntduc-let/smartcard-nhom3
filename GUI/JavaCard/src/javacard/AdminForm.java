/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javacard;

import connectDB.DataUser;
import connectDB.GetData;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.security.PublicKey;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javacard.connect.ConnectCard;
import javacard.connect.RSAAppletHelper;
import javacard.define.APPLET;
import javacard.utils.RSAData;
import javax.smartcardio.CardException;

/**
 *
 * @author kqhuynh
 */
public class AdminForm extends javax.swing.JFrame {

    /**
     * Creates new form HomeForm
     */
    public AdminForm() {
        initComponents();
        initInformation();
        
        initUI();
    }
    
    private void initInformation() {
        if(ConnectCard.getInstance().ReadInformation()){
            String id = ConnectCard.getInstance().strID.trim();
            if (id.isEmpty()) {
                id = randomMaNV();
                createCard(id);
            }
            edt_ma_nv.setText(id);
            edt_ma_nv1.setText(id);
            edt_ma_nv2.setText(id);
            edt_name.setText(ConnectCard.getInstance().strName.trim());
            edt_ngay_sinh.setText(ConnectCard.getInstance().strDate.trim());
            edt_co_quan.setText(ConnectCard.getInstance().strCoQuan.trim());
            edt_chuc_vu.setText(ConnectCard.getInstance().strChucVu.trim());
            edt_sdt.setText(ConnectCard.getInstance().strPhone.trim());
        }
    }
    
    private void initUI() {
        clickCreateCard();
        clearNotiUnlockCard();
        clearNotiResetPW();
    }
    
    private void clickCreateCard() {
        jp_create.setVisible(true);
        jp_unlock_card.setVisible(false);
        jp_reset_password.setVisible(false);
        
        btn_create_card.setBackground(Color.white);
        btn_unlock_card.setBackground(new Color(240,240,240));
        btn_reset_password.setBackground(new Color(240,240,240));
        btn_disconnect.setBackground(new Color(240,240,240));
    }
    
    private void clickUnlockCard() {
        jp_create.setVisible(false);
        jp_unlock_card.setVisible(true);
        jp_reset_password.setVisible(false);
        
        btn_create_card.setBackground(new Color(240,240,240));
        btn_unlock_card.setBackground(Color.white);
        btn_reset_password.setBackground(new Color(240,240,240));
        btn_disconnect.setBackground(new Color(240,240,240));
    }
    
    private void clickResetPW() {
        jp_create.setVisible(false);
        jp_unlock_card.setVisible(false);
        jp_reset_password.setVisible(true);
        
        btn_create_card.setBackground(new Color(240,240,240));
        btn_unlock_card.setBackground(new Color(240,240,240));
        btn_reset_password.setBackground(Color.white);
        btn_disconnect.setBackground(new Color(240,240,240));
    }
    
    private void clearNotiUnlockCard() {
        txt_noti_ma_nv1.setText(" ");
    }
    
    private void clearNotiResetPW() {
        txt_noti_ma_nv2.setText(" ");
    }
    
    private void reloadInfor() {
        AdminForm admin = new AdminForm();
            admin.setVisible(true);
            this.dispose();
    }
        private String maNVGen() {
        Random random = new Random();
        int numberVN = random.nextInt(1000);
        String maNV="";
        if(numberVN<10){
            maNV = "NV00" + numberVN;
        }else if(numberVN<100){
            maNV = "NV0" + numberVN;
        }else if(numberVN<1000){
           maNV = "NV" + numberVN;
        }
        DataUser dataUser = new DataUser();
        dataUser.setMaNV(maNV);
        GetData get = dataUser.Get(dataUser.maNV);
        if(get.document.getString("maNV")==null){
            PublicKey publicKeys = RSAData.getPublicKey();
            dataUser.setPublicKey(Arrays.toString(publicKeys.getEncoded()));
            dataUser.Post();
            return maNV;
        }
        return null;
    }
    
    private String randomMaNV() {
        String maNV = maNVGen();
        while(maNV == null){
            maNV = maNVGen();
        }
        return maNV;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp_admin = new javax.swing.JPanel();
        txt_admin = new javax.swing.JLabel();
        jp_content = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txt_user = new javax.swing.JLabel();
        btn_create_card = new javax.swing.JLabel();
        txt_option = new javax.swing.JLabel();
        btn_unlock_card = new javax.swing.JLabel();
        btn_reset_password = new javax.swing.JLabel();
        btn_disconnect = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jp_reset_password = new javax.swing.JPanel();
        txt_title_reset_password = new javax.swing.JLabel();
        txt_ma_nv2 = new javax.swing.JLabel();
        edt_ma_nv2 = new javax.swing.JTextField();
        btn_reset = new javax.swing.JButton();
        txt_noti_ma_nv2 = new javax.swing.JLabel();
        jp_create = new javax.swing.JPanel();
        txt_ma_nv = new javax.swing.JLabel();
        edt_ma_nv = new javax.swing.JTextField();
        txt_name = new javax.swing.JLabel();
        edt_name = new javax.swing.JTextField();
        txt_ngay_sinh = new javax.swing.JLabel();
        edt_ngay_sinh = new javax.swing.JTextField();
        txt_co_quan = new javax.swing.JLabel();
        edt_co_quan = new javax.swing.JTextField();
        txt_chuc_vu = new javax.swing.JLabel();
        edt_chuc_vu = new javax.swing.JTextField();
        txt_sdt = new javax.swing.JLabel();
        edt_sdt = new javax.swing.JTextField();
        btn_update = new javax.swing.JButton();
        txt_noti_ma_nv = new javax.swing.JLabel();
        txt_noti_name = new javax.swing.JLabel();
        txt_noti_date = new javax.swing.JLabel();
        txt_noti_chuc_vu = new javax.swing.JLabel();
        txt_noti_co_quan = new javax.swing.JLabel();
        txt_noti_phone = new javax.swing.JLabel();
        btn_reset_info = new javax.swing.JButton();
        jp_unlock_card = new javax.swing.JPanel();
        txt_title_unlock_card = new javax.swing.JLabel();
        txt_ma_nv1 = new javax.swing.JLabel();
        edt_ma_nv1 = new javax.swing.JTextField();
        btn_unlock = new javax.swing.JButton();
        txt_noti_ma_nv1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản trị viên");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(980, 540));
        setPreferredSize(new java.awt.Dimension(980, 580));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jp_admin.setBackground(new java.awt.Color(0, 102, 153));
        jp_admin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_admin.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        txt_admin.setForeground(new java.awt.Color(102, 204, 255));
        txt_admin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_admin.setText("Quản trị viên");
        jp_admin.add(txt_admin, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 30, 980, -1));

        getContentPane().add(jp_admin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 110));

        txt_user.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txt_user.setForeground(new java.awt.Color(255, 0, 51));
        txt_user.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_user.setText("Người dùng");

        btn_create_card.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_create_card.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_create_card.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-user-32.png"))); // NOI18N
        btn_create_card.setText("Thông tin");
        btn_create_card.setOpaque(true);
        btn_create_card.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_create_cardMouseClicked(evt);
            }
        });

        txt_option.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txt_option.setForeground(new java.awt.Color(255, 0, 51));
        txt_option.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_option.setText("Tùy chọn");

        btn_unlock_card.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_unlock_card.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_unlock_card.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-unlock-32.png"))); // NOI18N
        btn_unlock_card.setText("Mở khoá thẻ");
        btn_unlock_card.setOpaque(true);
        btn_unlock_card.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_unlock_cardMouseClicked(evt);
            }
        });

        btn_reset_password.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_reset_password.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_reset_password.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-password-reset-32.png"))); // NOI18N
        btn_reset_password.setText("Đặt lại PIN");
        btn_reset_password.setOpaque(true);
        btn_reset_password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_reset_passwordMouseClicked(evt);
            }
        });

        btn_disconnect.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btn_disconnect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btn_disconnect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-link-32.png"))); // NOI18N
        btn_disconnect.setText("Ngắt kết nối");
        btn_disconnect.setOpaque(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_user, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_create_card, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_option, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_unlock_card, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_disconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_reset_password, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_user, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_create_card, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_option, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_unlock_card, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_reset_password, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_disconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jp_reset_password.setBackground(new java.awt.Color(255, 255, 255));

        txt_title_reset_password.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txt_title_reset_password.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_title_reset_password.setText("Đặt lại PIN");

        txt_ma_nv2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_ma_nv2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_ma_nv2.setText("Mã nhân viên");

        edt_ma_nv2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        edt_ma_nv2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        btn_reset.setBackground(new java.awt.Color(0, 102, 153));
        btn_reset.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btn_reset.setForeground(new java.awt.Color(255, 255, 255));
        btn_reset.setText("Đặt lại");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        txt_noti_ma_nv2.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        txt_noti_ma_nv2.setForeground(new java.awt.Color(255, 0, 0));
        txt_noti_ma_nv2.setText("Mã nhân viên không được để trống");

        javax.swing.GroupLayout jp_reset_passwordLayout = new javax.swing.GroupLayout(jp_reset_password);
        jp_reset_password.setLayout(jp_reset_passwordLayout);
        jp_reset_passwordLayout.setHorizontalGroup(
            jp_reset_passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_reset_passwordLayout.createSequentialGroup()
                .addGroup(jp_reset_passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_reset_passwordLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txt_ma_nv2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jp_reset_passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_noti_ma_nv2, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edt_ma_nv2, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jp_reset_passwordLayout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(btn_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp_reset_passwordLayout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(txt_title_reset_password, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp_reset_passwordLayout.setVerticalGroup(
            jp_reset_passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_reset_passwordLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_title_reset_password, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(jp_reset_passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_ma_nv2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edt_ma_nv2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_noti_ma_nv2)
                .addGap(115, 115, 115)
                .addComponent(btn_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        jPanel4.add(jp_reset_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 410));

        jp_create.setBackground(new java.awt.Color(255, 255, 255));

        txt_ma_nv.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_ma_nv.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_ma_nv.setText("Mã nhân viên");
        txt_ma_nv.setEnabled(false);

        edt_ma_nv.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        edt_ma_nv.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        edt_ma_nv.setEnabled(false);

        txt_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_name.setText("Họ tên");

        edt_name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        edt_name.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txt_ngay_sinh.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_ngay_sinh.setText("Ngày sinh");

        edt_ngay_sinh.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        edt_ngay_sinh.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txt_co_quan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_co_quan.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_co_quan.setText("Tên cơ quan");

        edt_co_quan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        edt_co_quan.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txt_chuc_vu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_chuc_vu.setText("Chức vụ");

        edt_chuc_vu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        edt_chuc_vu.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        txt_sdt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_sdt.setText("Số điện thoại");

        edt_sdt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        edt_sdt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        btn_update.setBackground(new java.awt.Color(0, 102, 153));
        btn_update.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btn_update.setForeground(new java.awt.Color(255, 255, 255));
        btn_update.setText("Tạo");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        txt_noti_ma_nv.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        txt_noti_ma_nv.setForeground(new java.awt.Color(255, 0, 0));
        txt_noti_ma_nv.setText(" ");

        txt_noti_name.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        txt_noti_name.setForeground(new java.awt.Color(255, 0, 0));
        txt_noti_name.setText(" ");

        txt_noti_date.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        txt_noti_date.setForeground(new java.awt.Color(255, 0, 0));
        txt_noti_date.setText(" ");

        txt_noti_chuc_vu.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        txt_noti_chuc_vu.setForeground(new java.awt.Color(255, 0, 0));
        txt_noti_chuc_vu.setText(" ");

        txt_noti_co_quan.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        txt_noti_co_quan.setForeground(new java.awt.Color(255, 0, 0));
        txt_noti_co_quan.setText(" ");

        txt_noti_phone.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        txt_noti_phone.setForeground(new java.awt.Color(255, 0, 0));
        txt_noti_phone.setText(" ");

        btn_reset_info.setBackground(new java.awt.Color(0, 102, 153));
        btn_reset_info.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btn_reset_info.setForeground(new java.awt.Color(255, 255, 255));
        btn_reset_info.setText("Đặt lại");
        btn_reset_info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reset_infoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jp_createLayout = new javax.swing.GroupLayout(jp_create);
        jp_create.setLayout(jp_createLayout);
        jp_createLayout.setHorizontalGroup(
            jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_createLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_createLayout.createSequentialGroup()
                        .addComponent(txt_ma_nv, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_noti_ma_nv, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edt_ma_nv, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jp_createLayout.createSequentialGroup()
                        .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_noti_name, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jp_createLayout.createSequentialGroup()
                        .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_co_quan, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_ngay_sinh, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_noti_chuc_vu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edt_co_quan, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edt_ngay_sinh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_noti_date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jp_createLayout.createSequentialGroup()
                        .addComponent(txt_sdt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_noti_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edt_sdt, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jp_createLayout.createSequentialGroup()
                        .addComponent(txt_chuc_vu, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_noti_co_quan, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edt_chuc_vu, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_createLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167)
                .addComponent(btn_reset_info, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130))
        );
        jp_createLayout.setVerticalGroup(
            jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_createLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_ma_nv, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edt_ma_nv, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_noti_ma_nv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_noti_name)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_ngay_sinh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edt_ngay_sinh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_noti_date)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_co_quan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edt_co_quan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_noti_co_quan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edt_chuc_vu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_chuc_vu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_noti_chuc_vu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_sdt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edt_sdt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_noti_phone)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp_createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_reset_info, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.add(jp_create, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 410));

        jp_unlock_card.setBackground(new java.awt.Color(255, 255, 255));

        txt_title_unlock_card.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txt_title_unlock_card.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txt_title_unlock_card.setText("Mở khoá thẻ");

        txt_ma_nv1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txt_ma_nv1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_ma_nv1.setText("Mã nhân viên");

        edt_ma_nv1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        edt_ma_nv1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        btn_unlock.setBackground(new java.awt.Color(0, 102, 153));
        btn_unlock.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btn_unlock.setForeground(new java.awt.Color(255, 255, 255));
        btn_unlock.setText("Mở khoá");
        btn_unlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_unlockActionPerformed(evt);
            }
        });

        txt_noti_ma_nv1.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        txt_noti_ma_nv1.setForeground(new java.awt.Color(255, 0, 0));
        txt_noti_ma_nv1.setText("Mã nhân viên không được để trống");

        javax.swing.GroupLayout jp_unlock_cardLayout = new javax.swing.GroupLayout(jp_unlock_card);
        jp_unlock_card.setLayout(jp_unlock_cardLayout);
        jp_unlock_cardLayout.setHorizontalGroup(
            jp_unlock_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_unlock_cardLayout.createSequentialGroup()
                .addGroup(jp_unlock_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_unlock_cardLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txt_ma_nv1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jp_unlock_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_noti_ma_nv1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(edt_ma_nv1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jp_unlock_cardLayout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(btn_unlock, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jp_unlock_cardLayout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(txt_title_unlock_card, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp_unlock_cardLayout.setVerticalGroup(
            jp_unlock_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_unlock_cardLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_title_unlock_card, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(jp_unlock_cardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_ma_nv1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edt_ma_nv1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_noti_ma_nv1)
                .addGap(115, 115, 115)
                .addComponent(btn_unlock, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        jPanel4.add(jp_unlock_card, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 410));

        javax.swing.GroupLayout jp_contentLayout = new javax.swing.GroupLayout(jp_content);
        jp_content.setLayout(jp_contentLayout);
        jp_contentLayout.setHorizontalGroup(
            jp_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_contentLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp_contentLayout.setVerticalGroup(
            jp_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_contentLayout.createSequentialGroup()
                .addGroup(jp_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jp_content, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 980, 430));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_create_cardMouseClicked(MouseEvent evt) {//GEN-FIRST:event_btn_create_cardMouseClicked
        clickCreateCard();
    }//GEN-LAST:event_btn_create_cardMouseClicked

    private void btn_unlock_cardMouseClicked(MouseEvent evt) {//GEN-FIRST:event_btn_unlock_cardMouseClicked
        clickUnlockCard();
    }//GEN-LAST:event_btn_unlock_cardMouseClicked

    private void btn_updateActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        String strId = edt_ma_nv.getText().trim();
        String strName = edt_name.getText().trim();
        String strDate = edt_ngay_sinh.getText().trim();
        String strCoQuan = edt_co_quan.getText().trim();
        String strChucVu = edt_chuc_vu.getText().trim();
        String strPhone = edt_sdt.getText().trim();
        
        if (strId.isEmpty()) {
            strId = " ";
        }
        if (strName.isEmpty()) {
            strName = " ";
        }
        if (strDate.isEmpty()) {
            strDate = " ";
            txt_noti_date.setText(" ");
        }else{
            if(!checkDate(strDate)){
                txt_noti_date.setText("Ngày sinh không đúng định dạng. VD: 01/01/2000");
                return;
            }else{
                txt_noti_date.setText(" ");
            }
        }
        if (strCoQuan.isEmpty()) {
            strCoQuan = " ";
        }
        if (strChucVu.isEmpty()) {
            strChucVu = " ";
        }
        if (strPhone.isEmpty()) {
            strPhone = " ";
            txt_noti_phone.setText(" ");
        }else{
            if(!checkPhone(strPhone)){
                txt_noti_phone.setText("Số điện thoại không đúng định dạng");
                return;
            }else{
                txt_noti_phone.setText(" ");
            }
        }
        
        byte[] byteID = strId.getBytes();
        byte[] byteName = strName.getBytes();
        byte[] byteDate = strDate.getBytes();
        byte[] byteCoQuan = strCoQuan.getBytes();
        byte[] byteChucVu = strChucVu.getBytes();
        byte[] bytePhone = strPhone.getBytes();

        byte[] data = new byte[byteID.length+byteName.length+byteDate.length+bytePhone.length+byteCoQuan.length+byteChucVu.length+12];
        //byteID
        int offSet = 0;
        data[offSet] = (byte)0x02;
        offSet += 1;
        System.arraycopy(byteID, 0,data, offSet, byteID.length);
        offSet += byteID.length;
        data[offSet] = (byte)0x03;
        
        //byteName
        offSet += 1;
        data[offSet] = (byte)0x02;
        offSet += 1;
        System.arraycopy(byteName, 0,data, offSet, byteName.length);
        offSet += byteName.length;
        data[offSet] = (byte) 0x03;
        
        //byteDate
        offSet += 1;
        data[offSet] = (byte) 0x02;
        offSet += 1;
        System.arraycopy(byteDate, 0, data, offSet, byteDate.length);
        offSet += byteDate.length;
        data[offSet] = (byte)0x03;
        
        //bytePhone
        offSet += 1;
        data[offSet] = (byte)0x02;
        offSet += 1;
        System.arraycopy(bytePhone, 0, data, offSet, bytePhone.length);
        offSet += bytePhone.length;
        data[offSet] = (byte)0x03;
        
        //byteCoQuan
        offSet += 1;
        data[offSet] = (byte)0x02;
        offSet += 1;
        System.arraycopy(byteCoQuan, 0, data, offSet, byteCoQuan.length);
        offSet += byteCoQuan.length;
        data[offSet] = (byte)0x03;
        
        //byteChucVu
        offSet += 1;
        data[offSet] = (byte)0x02;
        offSet += 1;
        System.arraycopy(byteChucVu, 0, data, offSet, byteChucVu.length);
        offSet += byteChucVu.length;
        data[offSet] = (byte)0x03;

        if(ConnectCard.getInstance().EditInformation(data)){
            try {
                PublicKey publicKeys = RSAAppletHelper.getInstance(
                    ConnectCard.getInstance().channel).getPublicKey();
            } catch (CardException ex) {
                Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            reloadInfor();

            System.out.println("Success");
        }
        else{
            System.out.println("Sending Error");
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_reset_passwordMouseClicked(MouseEvent evt) {//GEN-FIRST:event_btn_reset_passwordMouseClicked
        clickResetPW();
    }//GEN-LAST:event_btn_reset_passwordMouseClicked

    private void btn_unlockActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btn_unlockActionPerformed
        if(edt_ma_nv1.getText().trim().isEmpty()){
            txt_noti_ma_nv1.setText("Mã nhân viên không được để trống");
            return;
        }
        
        if(ConnectCard.getInstance().ReadInformation()){
            String id = ConnectCard.getInstance().strID.trim();
            if (!id.equals(edt_ma_nv1.getText().trim())) {
                txt_noti_ma_nv1.setText("Mã nhân viên không chính xác");
            return;
            }
        }
        
        ConnectCard.getInstance().UnblockPin(APPLET.AID_APPLET);
        clearNotiUnlockCard();
    }//GEN-LAST:event_btn_unlockActionPerformed

    private void btn_resetActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        if(edt_ma_nv1.getText().trim().isEmpty()){
            txt_noti_ma_nv1.setText("Mã nhân viên không được để trống");
            return;
        }
        
        if(ConnectCard.getInstance().ReadInformation()){
            String id = ConnectCard.getInstance().strID.trim();
            if (!id.equals(edt_ma_nv1.getText().trim())) {
                txt_noti_ma_nv1.setText("Mã nhân viên không chính xác");
            return;
            }
        }
        
        ConnectCard.getInstance().ResetPin();
        clearNotiUnlockCard();
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_reset_infoActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btn_reset_infoActionPerformed
        if(ConnectCard.getInstance().ReadInformation()){
            edt_ma_nv.setText(ConnectCard.getInstance().strID);
            edt_name.setText(ConnectCard.getInstance().strName);
            edt_ngay_sinh.setText(ConnectCard.getInstance().strDate);
            edt_co_quan.setText(ConnectCard.getInstance().strCoQuan);
            edt_chuc_vu.setText(ConnectCard.getInstance().strChucVu);
            edt_sdt.setText(ConnectCard.getInstance().strPhone);
        }
    }//GEN-LAST:event_btn_reset_infoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btn_create_card;
    private javax.swing.JLabel btn_disconnect;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_reset_info;
    private javax.swing.JLabel btn_reset_password;
    private javax.swing.JButton btn_unlock;
    private javax.swing.JLabel btn_unlock_card;
    private javax.swing.JButton btn_update;
    private javax.swing.JTextField edt_chuc_vu;
    private javax.swing.JTextField edt_co_quan;
    private javax.swing.JTextField edt_ma_nv;
    private javax.swing.JTextField edt_ma_nv1;
    private javax.swing.JTextField edt_ma_nv2;
    private javax.swing.JTextField edt_name;
    private javax.swing.JTextField edt_ngay_sinh;
    private javax.swing.JTextField edt_sdt;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jp_admin;
    private javax.swing.JPanel jp_content;
    private javax.swing.JPanel jp_create;
    private javax.swing.JPanel jp_reset_password;
    private javax.swing.JPanel jp_unlock_card;
    private javax.swing.JLabel txt_admin;
    private javax.swing.JLabel txt_chuc_vu;
    private javax.swing.JLabel txt_co_quan;
    private javax.swing.JLabel txt_ma_nv;
    private javax.swing.JLabel txt_ma_nv1;
    private javax.swing.JLabel txt_ma_nv2;
    private javax.swing.JLabel txt_name;
    private javax.swing.JLabel txt_ngay_sinh;
    private javax.swing.JLabel txt_noti_chuc_vu;
    private javax.swing.JLabel txt_noti_co_quan;
    private javax.swing.JLabel txt_noti_date;
    private javax.swing.JLabel txt_noti_ma_nv;
    private javax.swing.JLabel txt_noti_ma_nv1;
    private javax.swing.JLabel txt_noti_ma_nv2;
    private javax.swing.JLabel txt_noti_name;
    private javax.swing.JLabel txt_noti_phone;
    private javax.swing.JLabel txt_option;
    private javax.swing.JLabel txt_sdt;
    private javax.swing.JLabel txt_title_reset_password;
    private javax.swing.JLabel txt_title_unlock_card;
    private javax.swing.JLabel txt_user;
    // End of variables declaration//GEN-END:variables

    private void createCard(String id) {
        byte[] byteID = id.getBytes();
        byte[] byteName = " ".getBytes();
        byte[] byteDate = " ".getBytes();
        byte[] byteCoQuan = " ".getBytes();
        byte[] byteChucVu = " ".getBytes();
        byte[] bytePhone = " ".getBytes();

        byte[] data = new byte[byteID.length+byteName.length+byteDate.length+bytePhone.length+byteCoQuan.length+byteChucVu.length+12];
        //byteID
        int offSet = 0;
        data[offSet] = (byte)0x02;
        offSet += 1;
        System.arraycopy(byteID, 0,data, offSet, byteID.length);
        offSet += byteID.length;
        data[offSet] = (byte)0x03;
        
        //byteName
        offSet += 1;
        data[offSet] = (byte)0x02;
        offSet += 1;
        System.arraycopy(byteName, 0,data, offSet, byteName.length);
        offSet += byteName.length;
        data[offSet] = (byte) 0x03;
        
        //byteDate
        offSet += 1;
        data[offSet] = (byte) 0x02;
        offSet += 1;
        System.arraycopy(byteDate, 0, data, offSet, byteDate.length);
        offSet += byteDate.length;
        data[offSet] = (byte)0x03;
        
        //bytePhone
        offSet += 1;
        data[offSet] = (byte)0x02;
        offSet += 1;
        System.arraycopy(bytePhone, 0, data, offSet, bytePhone.length);
        offSet += bytePhone.length;
        data[offSet] = (byte)0x03;
        
        //byteCoQuan
        offSet += 1;
        data[offSet] = (byte)0x02;
        offSet += 1;
        System.arraycopy(byteCoQuan, 0, data, offSet, byteCoQuan.length);
        offSet += byteCoQuan.length;
        data[offSet] = (byte)0x03;
        
        //byteChucVu
        offSet += 1;
        data[offSet] = (byte)0x02;
        offSet += 1;
        System.arraycopy(byteChucVu, 0, data, offSet, byteChucVu.length);
        offSet += byteChucVu.length;
        data[offSet] = (byte)0x03;

        if(ConnectCard.getInstance().CreateInformation(data)){
            try {
                PublicKey publicKeys = RSAAppletHelper.getInstance(
                    ConnectCard.getInstance().channel).getPublicKey();
            } catch (CardException ex) {
                Logger.getLogger(AdminForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            reloadInfor();
            System.out.println("Success");
        }
        else{
            System.out.println("Sending Error");
        }
    }
    
    private boolean checkDate(String date) {
        SimpleDateFormat sdfrmt = new SimpleDateFormat("dd/MM/yyyy");
	    sdfrmt.setLenient(false);
	    /* Create Date object
	     * parse the string into date 
             */
	    try
	    {
	        Date javaDate = sdfrmt.parse(date); 
	    }
	    /* Date format is invalid */
	    catch (ParseException e)
	    {
	        return false;
	    }
	    /* Return true if date format is valid */
	    return true;
    }
    
    private boolean checkPhone(String strPhone) {
        if(strPhone.length()==10
                && strPhone.charAt(0)=='0'
                && (strPhone.charAt(1)=='3' || strPhone.charAt(1)=='5' || strPhone.charAt(1)=='7' || strPhone.charAt(1)=='8' || strPhone.charAt(1)=='9')){
            for(int i = 2; i < strPhone.length(); i++){
                if(strPhone.charAt(i) != '0' && strPhone.charAt(i) != '1' && strPhone.charAt(i) != '2' && strPhone.charAt(i) != '3' && strPhone.charAt(i) != '4' 
                        && strPhone.charAt(i) != '5' && strPhone.charAt(i) != '6' && strPhone.charAt(i) != '7' && strPhone.charAt(i) != '8' && strPhone.charAt(i) != '9'){
                    return false;
                }
            }
            return true;
        }else{
            return false;
        }
    }
}
